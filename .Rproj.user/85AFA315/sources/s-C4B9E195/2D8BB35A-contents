---
title: "Mathestunde"
date: "18. Januar 2021"
output: html_document
runtime: shiny
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Fl√§cheninhalte berechnen

Erinnert ihr euch noch an lang vergangene Zeiten?....



```{r Dreieck, echo = FALSE}
B <- c(8,0); C <- c(6,2.5)
meinDreieck<-function(A=c(0,0), B=B, C=C){
plot(x = c(A[1],B[1]),y = c(A[2],B[2]),type="l",xlim=c(-0.5,B[1]+1),ylim=c(-0.5,C[2]+1), axes=F,col=1,lwd=2,xlab = "",ylab="")
lines(x = c(A[1],C[1]),y = c(A[2],C[2]), col=1, lwd=2)
lines(x = c(B[1],C[1]),y = c(B[2],C[2]), col=1, lwd=2)
lines(x=c(6,6), y=c(0,2.5), col=1, lwd=1)
text(A[1], A[2], labels = "A", pos = 2)
text(B[1], B[2], labels = "B", pos = 4)
text(C[1], C[2], labels = "C", pos = 3)
text(x=7, y= 1.4, labels = "a", pos = 4)
text(x=3.2, y= 1.5, labels = "b", pos = 2)
text(x=4, y=0, labels = "c", pos = 1)
text(x= 6 , y=1 , labels = expression(h[c]) ,pos = 4)
}
meinDreieck(B = c(8,0), C = c(6,2.5))
```


```{r eruptions, echo=FALSE}
inputPanel(
  selectInput("n_breaks", label = "Number of bins:",
              choices = c(10, 20, 35, 50), selected = 20),
  
  sliderInput("bw_adjust", label = "Bandwidth adjustment:",
              min = 0.2, max = 2, value = 1, step = 0.2)
)

renderPlot({
  hist(faithful$eruptions, probability = TRUE, breaks = as.numeric(input$n_breaks),
       xlab = "Duration (minutes)", main = "Geyser eruption duration")
  
  dens <- density(faithful$eruptions, adjust = input$bw_adjust)
  lines(dens, col = "blue")
})
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
